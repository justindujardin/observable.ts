
/*!
  observable.ts - v0.0.0
  origin: https://github.com/justindujardin/observable.ts
  built: 2015-08-23
 */

var obs;!function(a){function b(a){return"object"==typeof a&&!!a&&"[object Array]"!==toString.call(a)}a.isObject=b;var c=function(){function a(){this._listeners=[]}return a.prototype.subscribe=function(a){var c=this;if(!a||!b(a))return null;var d=!1;return this._listeners.push(a),{unsubscribe:function(){d||(d=!0,c._removeGenerator(a))}}},a.prototype.next=function(a){return this._execute("next",a)},a.prototype["throw"]=function(a){return this._execute("throw",a)},a.prototype["return"]=function(a){return this._execute("return",a)},a.prototype._execute=function(a,b){for(var c=this,d=[],e=0;e<this._listeners.length;e++)try{var f=this._listeners[e];if(!f||!f[a])continue;var g=f[a](b);g&&g.done===!0&&d.push(this._listeners[e])}catch(h){"throw"===a?console.error("Error thrown in error handler: ",h):this["throw"](h);break}d.length&&d.forEach(function(a){return c._removeGenerator(a)})},a.prototype._removeGenerator=function(a){for(var b=0;b<this._listeners.length;b++)if(this._listeners[b]===a)return void this._listeners.splice(b,1)},a}();a.Observable=c}(obs||(obs={}));
//# sourceMappingURL=observable.min.js.map